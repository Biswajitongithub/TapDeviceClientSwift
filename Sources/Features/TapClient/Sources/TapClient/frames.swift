// This file has been generated
// Do not edit this file, it may be overwritten
//

extension TapStreamReader {

    func readTapRequestHeader() -> TapRequestHeader {
        var model = TapRequestHeader()
        model.methodType = readU1()
        model.path = readPath()
        return model
    }
    
    func readTapRequestHeaderPath() ->  TapRequestHeader.Path {
        var model = TapRequestHeader.Path()
        model.objectId = readU2()
        model.objectInstanceId = readU2()
        model.resourceId = readU2()
        return model
    }
    

    func readTapRequest() -> TapRequest {
        var model = TapRequest()
        model.header = readTapRequestHeader()
        model.payload = readBytes()
        return model
    }
    

    func readTapResponse() -> TapResponse {
        var model = TapResponse()
        model.codeRet = readU1()
        model.data = readBytes()
        return model
    }
    

    func readTapApduRequest() -> TapApduRequest {
        var model = TapApduRequest()
        model.header = readHeader()
        model.request = readTapRequest()
        return model
    }
    
    func readTapApduRequestHeader() ->  TapApduRequest.Header {
        var model = TapApduRequest.Header()
        model.cla = readU1()
        model.ins = readU1()
        model.p1 = readU1()
        model.p2 = readU1()
        model.lc = readU1()
        return model
    }
    

    func readApduResponse() -> ApduResponse {
        var model = ApduResponse()
        model.data = readBytes(_io.size - 2)
        model.status = readBytes(2)
        return model
    }
    

    func readApduRequest() -> ApduRequest {
        var model = ApduRequest()
        model.header = readApduRequestHeader()
        model.data = readBytes(header.lc)
        return model
    }
    

    func readApduRequestHeader() -> ApduRequestHeader {
        var model = ApduRequestHeader()
        model.cla = readU1()
        model.ins = readU1()
        model.p1 = readU1()
        model.p2 = readU1()
        model.lc = readU1()
        return model
    }
    

    func readIotizeEncryptedFrame() -> IotizeEncryptedFrame {
        var model = IotizeEncryptedFrame()
        model.id = readU2()
        model.len = readU2()
        model.payload = readBytes(len)
        model.crc = readU4()
        return model
    }
    

}

extension TapStreamWriter {

    func writeTapRequestHeader(model: TapRequestHeader) -> KaitaiStreamWriter{
        writeu1(model.methodType)
        writepath(model.path)
        return this
    }

    func writeTapRequest(model: TapRequest) -> KaitaiStreamWriter{
        writetap_request_header(model.header)
        write(model.payload)
        return this
    }

    func writeTapResponse(model: TapResponse) -> KaitaiStreamWriter{
        writeu1(model.codeRet)
        write(model.data)
        return this
    }

    func writeTapApduRequest(model: TapApduRequest) -> KaitaiStreamWriter{
        writeheader(model.header)
        writetap_request(model.request)
        return this
    }

    func writeApduResponse(model: ApduResponse) -> KaitaiStreamWriter{
        write(model.data)
        write(model.status)
        return this
    }

    func writeApduRequest(model: ApduRequest) -> KaitaiStreamWriter{
        writeapdu_request_header(model.header)
        write(model.data)
        return this
    }

    func writeApduRequestHeader(model: ApduRequestHeader) -> KaitaiStreamWriter{
        writeu1(model.cla)
        writeu1(model.ins)
        writeu1(model.p1)
        writeu1(model.p2)
        writeu1(model.lc)
        return this
    }

    func writeIotizeEncryptedFrame(model: IotizeEncryptedFrame) -> KaitaiStreamWriter{
        writeu2(model.id)
        writeu2(model.len)
        write(model.payload)
        writeu4(model.crc)
        return this
    }

}
