//
// DataLogOption.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct DataLogOption: Codable {

    /** si 1, lors de l&#39;expédition d&#39;un DataLoggin packet, demander un ack et attendre l&#39;ack avant de supprimer le paquet de l&#39;OutBox. */
    public var qos: Bool?
    /** si 1, crypter les paquets avant de les mettre dans l&#39;OutBox */
    public var security: Bool
    /** Etat initial Run (1) / Stop (0) du log au boot */
    public var autorun: Bool
    /** si 1, quand l&#39;OutBox est pleine, arrêter de logger. Les nouveaux paquets sont alors perdus. Si 0, quand l&#39;OutBox est pleine, supprimer les anciens paquets pour mettre les nouveaux à la place */
    public var rollingMode: Bool
    /** Si 1, les paquets ne sont stockés et/ou émis que si les données sont différentes des précédentes. */
    public var logOnChange: Bool

    public init(qos: Bool?, security: Bool, autorun: Bool, rollingMode: Bool, logOnChange: Bool) {
        self.qos = qos
        self.security = security
        self.autorun = autorun
        self.rollingMode = rollingMode
        self.logOnChange = logOnChange
    }


}

