//
// SinglePacketAPI.swift
//
// Generated by iotize device api codegen
//

import Foundation
// 



open class SinglePacketAPI {


    /**
    * Execute (after validation) a big Single Packet previously sent to the TAP using BSPP.
    * Execute (after validation) a big Single Packet previously sent to the TAP using BSPP.  Stored packet is erased after packet is executed. (even if failed to execute) This command contains some control information (size, hash, CRC, salt, etc.) TBD
    * LWM2M path: /1024//83
    * Body converter id: "Bytes"

    * @param data input
    * @return Bytes api call
    */
    public func bspe(
        data: Bytes
    ) -> ApiRequest<Bytes>{
        

        return ApiRequest(
            method: TapRequestHeader.MethodType.POST
            , path: "/single-packet/bspe"
            , body: data
        )
    }
    /**
    * Get information concerning Single Packet Store Status
    * Get information concerning Single Packet Store Status : Does this TAP provide the Single Packet Store ? (SPS) Is the store empty, full or halfway ? Details about the the execution of the last executes SP ?
    * LWM2M path: /1024//80
    * @return Bytes api call
    */
    public func getInfo()
         -> ApiRequest<Bytes>{
        

        return ApiRequest(
            method: TapRequestHeader.MethodType.GET
            , path: "/single-packet-store/info"
        )
    }
    /**
    * Send a partial Single Packet to the TAP.
    * Size of the packet &#x3D; 130 bytes : 2 bytes offset, 128 bytes packet part. Stored packet is erased when packet part 0 is received.
    * LWM2M path: /1024//82
    * Body converter id: "Bytes"

    * @param data input
    * @return Bytes api call
    */
    public func writePartialSinglePacket(
        data: Bytes
    ) -> ApiRequest<Bytes>{
        

        return ApiRequest(
            method: TapRequestHeader.MethodType.POST
            , path: "/single-packet/part"
            , body: data
        )
    }
    /**
    * Send a complete Small Single Packet to the TAP. Size of the packet &lt; 120 bytes
    * 
    * LWM2M path: /1024//80
    * Body converter id: "Bytes"

    * @param data input
    * @return Bytes api call
    */
    public func writeSmallSinglePacket(
        data: Bytes
    ) -> ApiRequest<Bytes>{
        

        return ApiRequest(
            method: TapRequestHeader.MethodType.POST
            , path: "/single-packet/write"
            , body: data
        )
    }

}
